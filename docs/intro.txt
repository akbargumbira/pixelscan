This documentation describes the API of the pixelscan library which provides
functions to scan pixels on a grid in a variety of spatial patterns. The library
consists of scan generators and coordinate transformations. Scan generators are
Python generators that return pixel coordinates in a particular spatial pattern.
Coordinate transformations are iterators that apply spatial transformations to
the coordinates created by the scan generators. Transformation can be chained to
yield very generic transformations. The source code is available at the
`pixelscan`_ project page.

.. _`pixelscan`: https://github.com/dpmcmlxxvi/pixelscan

* **Scan generators**

  - :meth:`circlescan <pixelscan.pixelscan.circlescan>`

  - :meth:`gridscan <pixelscan.pixelscan.gridscan>`

  - :meth:`hilbertscan <pixelscan.pixelscan.hilbertscan>`

  - :meth:`ringscan <pixelscan.pixelscan.ringscan>`

  - :meth:`snakescan <pixelscan.pixelscan.snakescan>`

  - :meth:`walkscan <pixelscan.pixelscan.walkscan>`

* **Coordinate transformations**

  - :class:`clip <pixelscan.pixelscan.clip>`

  - :class:`reflection <pixelscan.pixelscan.reflection>`

  - :class:`reservoir <pixelscan.pixelscan.reservoir>`

  - :class:`rotation <pixelscan.pixelscan.rotation>`

  - :class:`sample <pixelscan.pixelscan.sample>`

  - :class:`scale <pixelscan.pixelscan.scale>`

  - :class:`skip <pixelscan.pixelscan.skip>`

  - :class:`snap <pixelscan.pixelscan.snap>`

  - :class:`swap <pixelscan.pixelscan.swap>`

  - :class:`translation <pixelscan.pixelscan.translation>`

* **Distance metrics**

  - :meth:`chebyshev <pixelscan.pixelscan.chebyshev>`

  - :meth:`manhattan <pixelscan.pixelscan.manhattan>`
